[users]
zhang=123,role1,role2
wang=123,role1
[roles]
role1=user:create,user:update
role2=user:create,user:delete
# Permission
# 字符串通配符权限：
# 1.单个资源单个权限
# system:user:update
# 判断：subject().checkPermissions("system:user:update");
# 2.单个资源多个权限
# role=system:user:update,system:user:delete
# 判断：subject().checkPermissions("system:user:update", "system:user:delete");
# 简写为：role=system:user:update,delete
# 判断：subject().checkPermissions("system:user:update,delete");
# 3.单个资源全部权限
# role=system:user:create,update,delete,view
# 判断：subject().checkPermissions("system:user:create,delete,update:view");
# 简写为：system:user:*(推荐) 或 system:user
# 判断：subject().checkPermissions("system:user:*"); 或 subject().checkPermissions("system:user");
# 4.所有资源全部权限
# role=*:view
# 判断：subject().checkPermissions("user:view");
# 5.实例级别的权限
# 单个实例单个权限：
# role=user:view:1  对资源user的1实例拥有权限
# 判断：subject().checkPermissions("user:view:1");
# 单个实例多个权限：
# role=user:update,delete:1  对资源user的1实例拥有update、delete权限
# 判断：subject().checkPermissions("user:delete,update:1"); 或 subject().checkPermissions("user:update:1", "user:delete:1");
# 单个实例所有权限：
# role=user:*:1  对资源user的1实例拥有所有权限
# 判断：subject().checkPermissions("user:update:1", "user:delete:1", "user:view:1");
# 所有实例单个权限：
# role=user:auth:*  对资源user的1实例拥有所有权限
# 判断：subject().checkPermissions("user:auth:1", "user:auth:2");
# 所有实例所有权限：
# role=user:*:*  对资源user的1实例拥有所有权限
# 判断：subject().checkPermissions("user:view:1", "user:auth:2");
# 6.shiro对权限字符串缺失部分的处理
# 前缀匹配：user:view == user:view:*
# *匹配所有：user:* == user:delete  user:delete == user:delete:1  user:*:1 == user:view:1
# 后缀匹配必须指定前缀：*:*:view == system:user:view